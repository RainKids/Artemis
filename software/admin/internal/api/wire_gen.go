// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package api

import (
	"admin/api/proto"
	"admin/internal/repository"
	"admin/internal/service"
	"admin/pkg/config"
	"admin/pkg/database/redis"
	"admin/pkg/logger"
	"github.com/google/wire"
)

// Injectors from wire.go:

func CreateController(cf string, repo repository.Repository, blogRpcSrv proto.BlogServiceClient) (*Controller, error) {
	viper, err := config.New(cf)
	if err != nil {
		return nil, err
	}
	options, err := logger.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	zapLogger, err := logger.New(options)
	if err != nil {
		return nil, err
	}
	redisOptions, err := redis.NewOptions(viper, zapLogger)
	if err != nil {
		return nil, err
	}
	redisDB, err := redis.New(redisOptions)
	if err != nil {
		return nil, err
	}
	serviceService := service.NewService(zapLogger, repo, blogRpcSrv)
	controller := NewController(zapLogger, viper, redisDB, serviceService)
	return controller, nil
}

// wire.go:

var apiProviderSet = wire.NewSet(logger.ProviderSet, config.ProviderSet, redis.ProviderSet, service.ProviderSet, ProviderSet)
